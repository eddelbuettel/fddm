// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// cpp_dfddm
Rcpp::NumericVector cpp_dfddm(Rcpp::NumericVector rt, Rcpp::LogicalVector response, double a, double v, double t0, double w, double sv, bool log_prob, const std::string& n_terms_small, const std::string& summation_small, const std::string& scale, double eps);
RcppExport SEXP _fddm_cpp_dfddm(SEXP rtSEXP, SEXP responseSEXP, SEXP aSEXP, SEXP vSEXP, SEXP t0SEXP, SEXP wSEXP, SEXP svSEXP, SEXP log_probSEXP, SEXP n_terms_smallSEXP, SEXP summation_smallSEXP, SEXP scaleSEXP, SEXP epsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type rt(rtSEXP);
    Rcpp::traits::input_parameter< Rcpp::LogicalVector >::type response(responseSEXP);
    Rcpp::traits::input_parameter< double >::type a(aSEXP);
    Rcpp::traits::input_parameter< double >::type v(vSEXP);
    Rcpp::traits::input_parameter< double >::type t0(t0SEXP);
    Rcpp::traits::input_parameter< double >::type w(wSEXP);
    Rcpp::traits::input_parameter< double >::type sv(svSEXP);
    Rcpp::traits::input_parameter< bool >::type log_prob(log_probSEXP);
    Rcpp::traits::input_parameter< const std::string& >::type n_terms_small(n_terms_smallSEXP);
    Rcpp::traits::input_parameter< const std::string& >::type summation_small(summation_smallSEXP);
    Rcpp::traits::input_parameter< const std::string& >::type scale(scaleSEXP);
    Rcpp::traits::input_parameter< double >::type eps(epsSEXP);
    rcpp_result_gen = Rcpp::wrap(cpp_dfddm(rt, response, a, v, t0, w, sv, log_prob, n_terms_small, summation_small, scale, eps));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_fddm_cpp_dfddm", (DL_FUNC) &_fddm_cpp_dfddm, 12},
    {NULL, NULL, 0}
};

RcppExport void R_init_fddm(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
